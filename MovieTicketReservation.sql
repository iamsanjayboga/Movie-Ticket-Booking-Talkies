--------------------------------------------------------
--  DDL for Table MOVIES
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."MOVIES" 
   (	"MOVIEID" NUMBER(*,0), 
	"TITLE" NVARCHAR2(20), 
	"DESCRIPTION" NVARCHAR2(2000), 
	"LANGUAGE" NVARCHAR2(20), 
	"RELEASE_DATE" DATE, 
	"DIRECTOR" NVARCHAR2(20)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
  
--------------------------------------------------------
--  DDL for Table ACTORS
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."ACTORS" 
   (	"ACTORID" NUMBER(*,0), 
	"FIRSTNAME" NVARCHAR2(200), 
	"LASTNAME" NVARCHAR2(200), 
	"NATIONALITY" NVARCHAR2(100), 
	"DOB" DATE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

--------------------------------------------------------
--  DDL for Table BOOKEDMOVIES
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."BOOKEDMOVIES" 
   (	"BOOKINGID" NUMBER, 
	"NAME" NVARCHAR2(200), 
	"MOVIEID" NUMBER, 
	"NUMBER_OF_SEAT" NUMBER, 
	"SEATS" NVARCHAR2(200), 
	"MOVIENAME" NVARCHAR2(200)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
  
--------------------------------------------------------
--  DDL for Table GENRES
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."GENRES" 
   (	"GENREID" NUMBER(*,0), 
	"GENRENAME" NVARCHAR2(200)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
  
--------------------------------------------------------
--  DDL for Table MOVIEACTOR
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."MOVIEACTOR" 
   (	"MOVIEID" NUMBER(*,0), 
	"ACTORID" NUMBER(*,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;  

--------------------------------------------------------
--  DDL for Table MOVIEGENRES
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."MOVIEGENRES" 
   (	"MOVIEID" NUMBER(*,0), 
	"GENREID" NUMBER
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
  
--------------------------------------------------------
--  DDL for Table RATING
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."RATING" 
   (	"RATINGID" NUMBER(*,0), 
	"MOVIEID" NUMBER(*,0), 
	"STARS" NUMBER(*,0)
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
  
--------------------------------------------------------
--  DDL for Table USER_TABLE
--------------------------------------------------------

  CREATE TABLE "SYSTEM"."USER_TABLE" 
   (	"USERID" NUMBER(*,0), 
	"FIRSTNAME" NVARCHAR2(100), 
	"LASTNAME" NVARCHAR2(50), 
	"EMAIL" NVARCHAR2(100), 
	"CREATED_DATE" DATE
   ) PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
  
--------------------------------------------------------
--  Ref Constraints for Table MOVIEACTOR
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."MOVIEACTOR" ADD CONSTRAINT "MOVIEACTOR_FK1" FOREIGN KEY ("MOVIEID")
	  REFERENCES "SYSTEM"."MOVIES" ("MOVIEID") ENABLE;
  ALTER TABLE "SYSTEM"."MOVIEACTOR" ADD CONSTRAINT "MOVIEACTOR_FK2" FOREIGN KEY ("ACTORID")
	  REFERENCES "SYSTEM"."ACTORS" ("ACTORID") ENABLE;
  
--------------------------------------------------------
--  Ref Constraints for Table MOVIEGENRES
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."MOVIEGENRES" ADD CONSTRAINT "MOVIEGENRES_FK2" FOREIGN KEY ("MOVIEID")
	  REFERENCES "SYSTEM"."MOVIES" ("MOVIEID") ENABLE;
  ALTER TABLE "SYSTEM"."MOVIEGENRES" ADD CONSTRAINT "MOVIEGENRES_FK1" FOREIGN KEY ("GENREID")
	  REFERENCES "SYSTEM"."GENRES" ("GENREID") ENABLE;

--------------------------------------------------------
--  Constraints for Table USER_TABLE
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."USER_TABLE" MODIFY ("USERID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."USER_TABLE" MODIFY ("FIRSTNAME" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."USER_TABLE" MODIFY ("EMAIL" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."USER_TABLE" ADD CONSTRAINT "USER_TABLE_PK" PRIMARY KEY ("USERID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  
--------------------------------------------------------
--  Constraints for Table RATING
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."RATING" MODIFY ("RATINGID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."RATING" MODIFY ("STARS" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."RATING" ADD CONSTRAINT "RATING_PK" PRIMARY KEY ("RATINGID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."RATING" ADD CONSTRAINT "CHECK_RATING" CHECK (STARS > 1) ENABLE;
  
--------------------------------------------------------
--  Constraints for Table MOVIES
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."MOVIES" MODIFY ("MOVIEID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."MOVIES" MODIFY ("TITLE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."MOVIES" MODIFY ("LANGUAGE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."MOVIES" MODIFY ("RELEASE_DATE" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."MOVIES" MODIFY ("DIRECTOR" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."MOVIES" ADD CONSTRAINT "MOVIES_PK" PRIMARY KEY ("MOVIEID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  
--------------------------------------------------------
--  Constraints for Table ACTORS
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."ACTORS" MODIFY ("ACTORID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ACTORS" MODIFY ("FIRSTNAME" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ACTORS" MODIFY ("LASTNAME" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ACTORS" MODIFY ("NATIONALITY" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."ACTORS" ADD CONSTRAINT "ACTORS_PK" PRIMARY KEY ("ACTORID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."ACTORS" ADD CONSTRAINT "CHECK_NATIONALITY" CHECK (NATIONALITY IN ('American', 'Indian')) ENABLE;

--------------------------------------------------------
--  Constraints for Table GENRES
--------------------------------------------------------

  ALTER TABLE "SYSTEM"."GENRES" MODIFY ("GENREID" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."GENRES" MODIFY ("GENRENAME" NOT NULL ENABLE);
  ALTER TABLE "SYSTEM"."GENRES" ADD CONSTRAINT "GENRES_PK" PRIMARY KEY ("GENREID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "SYSTEM"."GENRES" ADD CONSTRAINT "CHECK_GENRE_NAME" CHECK (GENRENAME IN ('Action', 'Horror', 'Crime')) ENABLE;
  
  
--------------------------------------------------------
--  DDL for View FETCH_MOVIE_RECORDS
--------------------------------------------------------

CREATE OR REPLACE FORCE NONEDITIONABLE VIEW "SYSTEM"."FETCH_MOVIE_RECORDS" 
("MOVIEID", "TITLE", "DESCRIPTION", "LANGUAGE", "RELEASE_DATE", "DIRECTOR", 
"GENRENAME", "FULL_NAME", "NATIONALITY", "DOB", "STARS") AS 
SELECT M.MOVIEID, M.TITLE, M.DESCRIPTION,M.LANGUAGE,M.RELEASE_DATE,M.DIRECTOR,
G.GENRENAME, A.FIRSTNAME || ' ' || A.LASTNAME AS FULL_NAME, A.NATIONALITY, A.DOB,
R.STARS
FROM 
MOVIES M
JOIN MOVIEACTOR MA
ON M.MOVIEID = MA.MOVIEID
JOIN ACTORS A
ON A.ACTORID = MA.ACTORID
JOIN MOVIEGENRES MG
ON M.MOVIEID = MG.MOVIEID
JOIN GENRES G
ON G.GENREID = MG.GENRE.IS
JOIN RATING R
ON M.MOVIEID = R.MOVIEID
;

--------------------------------------------------------
--  DDL for Procedure BOOKINGMOVIERECORDS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "SYSTEM"."BOOKINGMOVIERECORDS" (
    BOOKINGID IN INT,
    NAME IN NVARCHAR2,
    MOVIEID IN INT,
    NUMBER_OF_SEAT IN INT,
    SEATS IN NVARCHAR2,
    MOVIENAME IN NVARCHAR2
) AS 
BEGIN
  INSERT INTO BOOKEDMOVIES(BOOKINGID, NAME, MOVIEID, NUMBER_OF_SEAT, SEATS, MOVIENAME) 
  VALUES (trunc(dbms_random.value(0,999999),0), NAME, MOVIEID, NUMBER_OF_SEAT, SEATS, MOVIENAME);
END BookingMovieRecords;

/
--------------------------------------------------------
--  DDL for Procedure INSERTUSINGPORTAL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "SYSTEM"."INSERTUSINGPORTAL" (
    PGENREID IN INT,
    PTITLE IN NVARCHAR2,
    PDESCRIPTION IN NVARCHAR2,
    PLANGUAGE IN NVARCHAR2,
    PRELEASE_DATE IN DATE,
    PDIRECTOR IN NVARCHAR2,
    PACTORF IN NVARCHAR2,
    PACTORL IN NVARCHAR2,
    PNATIONALITY IN NVARCHAR2,
    PDOB IN DATE,
    PSTARS IN INT,
    PMOVIEID  IN INT,
    PACTORID IN INT,
    PRATINGID IN INT
)
AS
BEGIN       

  INSERT INTO MOVIES(MOVIEID, TITLE, DESCRIPTION, LANGUAGE, RELEASE_DATE, 
  DIRECTOR) 
  VALUES (PMOVIEID, PTITLE, PDESCRIPTION, PLANGUAGE, PRELEASE_DATE, PDIRECTOR);

  INSERT INTO RATING(RATINGID, MOVIEID, STARS)
  VALUES(PRATINGID, PMOVIEID, PSTARS);

  INSERT INTO MOVIEGENRES(MOVIEID, GENREID)
  VALUES(PMOVIEID, PGENREID);

  INSERT INTO ACTORS(ACTORID, FIRSTNAME, LASTNAME, NATIONALITY, DOB)
  VALUES(PACTORID, PACTORF, PACTORL, PNATIONALITY, PDOB);

  INSERT INTO MOVIEACTOR(MOVIEID, ACTORID)
  VALUES(PMOVIEID, PACTORID);

END InsertUsingPortal;

/

--------------------------------------------------------
--  DDL for Function GET_USER_COUNT
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE FUNCTION "SYSTEM"."GET_USER_COUNT" (
    name NVARCHAR2
) 
RETURN NUMBER
IS
    usercount NUMBER := 0;
BEGIN

    SELECT COUNT(FIRSTNAME)
    INTO usercount
    FROM USER_TABLE 
    WHERE UPPER(FIRSTNAME) LIKE UPPER('%'|| name ||'%');

    -- return the total count
    RETURN usercount;
END;

--------------------------------------------------------
--  DDL for Trigger TR_ON_MOVIE
--------------------------------------------------------

  CREATE OR REPLACE NONEDITIONABLE TRIGGER "SYSTEM"."TR_ON_MOVIE" 
AFTER INSERT 
ON MOVIES
FOR EACH ROW
DECLARE
    v_username NVARCHAR2(200);
    v_ipaddress NVARCHAR2(200);    
BEGIN
    SELECT User INTO v_username FROM dual;
    SELECT SYS_CONTEXT('USERENV','IP_ADDRESS') INTO v_ipaddress FROM dual;
    INSERT INTO MOVIELOGS (USERID, DATETIME, IPADDRESS, EVENT, DESCRIPTION) 
    VALUES (user, SYSDATE, v_ipaddress, 'Movie Created', 'Movie created');
END;
/
ALTER TRIGGER "SYSTEM"."TR_ON_MOVIE" ENABLE;

